//This code is similar to Tutorial One (QST 1.)...Therefore, we will only emphasize on the new concepts

public class NumberToWord3
{
    public static void acceptNum(int num)
    {
        assert (num > 0 && num < 9): "invalid number";
        if (num <= 0 || num >= 9)
        {
            System.out.println("Invalid input...Argument should be between 0 and 9");
        }
        else {
            String output = "";
            switch (num)
            {
                case 0:
                    output = "Zero";
                    break ;
                case 1:
                    output = "One";
                    break ;
                case 2:
                    output = "Two";
                    break ;
                case 3:
                    output = "Three";
                    break ;
                case 4:
                    output = "Four";
                    break ;
                case 5:
                    output = "Five";
                    break ;
                case 6:
                    output = "Six";
                    break ;
                case 7:
                    output = "Seven";
                    break ;
                case 8:
                    output = "Eight";
                    break ;
                case 9:
                    output = "Nine";
                    break ;
            }
            System.out.printf("%s green bottle%s standing on the wall", output , (num == 1? "" : "s" )); //NOTE: There are 3 methods in the 'System' class for displaying output/message on the console/command prompt....they are listed below:
                                                                                                  //1) System.out.print()  2) System.out.println()  3) System.out.printf()   .....(Check more explanation at the end of this page).
                                                                                                  //We use the ternary operator ( ? :) to test if variable num equals to 1 or not. If true, the operator returns an empty string(as specified) and it returns 's' if variable num is not equal to 1.
        }
    }
    public static void main(String args[])
    {
        acceptNum( 1);
    }
    
}

//NOTE: System.out.print() is used to display output/message on the console window while retaining the cursor on the same Line.
//System.out.println() also function similarly to System.out.print() but it positions the cursor on the next line
//System.out.printf()  (f means "formatted"). This is used to display formatted data.
//NB: System.out.printf is overloaded. One of its overloaded version accepts 1 argument(which is the string to output without formatting) and the
//other accepts 2 arguments(the 1st argument is the data to output using format specifiers as place holder and the 2nd argument is
//the data the place holders are representing). Format specifiers begins with the percent(%) symbol followed by a
//character representing the data type. E.g %s is a placeholder for String, %d is a placeholder for int e.t.c. Now you should be able to read and understand the below statement
//System.out.printf("%s green bottle%s standing on the wall",output,(num == 1?"":"s"));

